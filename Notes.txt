Notes 

Next 
 - randomize train/test data
 - predict grades
 - interpretability
 - report

Additional
 - use dashboard
 - test GPU

################################################################

April 12, 2016

MNIST
[500^4] - train  NLL   0.5899 , train error  0.0002 , test error  0.007
[1000^4] - train  NLL   0.5895 , train error  0.0001 , test error  0.0057
[500^6] - train  NLL   0.5897 , train error  0.0002 , test error  0.0044
[500^8] - train  NLL   0.5903 , train error  0.0003 , test error  0.0043



################################################################

April 5, 2016 - Meeting

Filter by both date and course code
Additional variable for course taken
Redo linear regression, naive method

Fraction of 100 200 courses taken in the first two years
 - related basic statistics

Try first year, both dates and courses

################################################################

April 5, 2016

8 Majors
Set not taken as 0
 - 15.9%
Set not taken as -1
 - 15.5%
Set not taken as -5
 - 15.3%
Set not taken as -10 
 - 15.5%

Added adadelta and adam
 - not super effective

Fixed NLL for courses

################################################################

Marh 29, 2016

Use first year as input data
Replace courses not taken as -1
Research how to incorporate structure into input data
Preprocess data of first 2 years of courses
April 13
Predicting grades

################################################################

March 28, 2016

Added prediction for course taken or not

Entire Set - lr = 10, decay = 0.02, momen = 0, dropout = 0.3
 [100] - 39%
 [200] - <40%
 [500] - 41%
 [100,100] - <37%
 [200,200] - <36%
 [100,100,100] - <35%
 [100,100,100,100] - <35%
 [100^5] - <35%
 [1000] - 42%
 [2000] - 42%
 [200,200,200] - 34%
 [500,500,500] - 33%
 [1000,1000,1000] - 34%
 [1000^5] - 32%

[MAT,PHY]
 [500^5] - 31.5%

################################################################

March 27, 2016

Filtered for majors with at least 100 students
 - reduced from 66 to 47
 - barely removed any students ~ O(100)

Added Batch Normalization
Naive Classifier - 50% error
Binary Grades - same results

Entire Set - lr = 0.1, momentum = 0.99
	Linear regression, logistic - 98%
	100 - 41%
	100,100 - 39%
	500 - 38%
	500, 300 - 38%
	1000 - 39%

Entire Set - lr = 1, momentum = 0.9, decay = 0.01
	200 - <36%

Entire Set - lr = 0.1, momentum = 0, decay = 0.005, dropout = 0.5
 [100,100] - 38%
 [100] - 35%
 [500,500,500,500] - 39%
 [100,100,100] - 38%
 [500] - 35%
 [100,100,100,100] - 41%
 [2000] - 35%
 [500,500] - 35%

7 Majors - lr = 0.1, momentum = 0, decay = 0.005, dropout = 0.5
 [50,50,50,50,50,50,50] - 12%
 [200] - 11%
 [200,200] - 12%
 [100,100,50,50,50] - 11%

7 Majors - lr = 0.01, momentum = 0.9, decay = 0.005, dropout = 0.5
 [200,200] - 13%
 [100,100,50,50,50] - 12%


################################################################

March 15, 2016

 - linear regression on all majors
 - distinguish 0 grade and untaken courses
 - categorize first/second year courses by year
 - randomize training/testing data
 - compare to naive method argmax dept

 - train with only binary grades - taken/not taken
 - incorporate majors with input
 - initialization with major information
 - fewer nodes/layers

 - predicting course grades for future courses
 - predicting course choices

 - consider interpretability
 - send report


################################################################

March 8, 2016

Consider adding batch normalization
Consider adding filter to upper+lower year courses

################################################################

March 1, 2016

OLS + ReLU activation works well
Dropout - still need to add at run_nnet

Prediction ~10% error when only limited to 2 department's courses
Consider having all courses, but with only 2 majors

Fixed Issue with NLL
Removed Dropout on input layer

Add mini-batches in report

################################################################

 - Debug the 2 major case
 	- add OLS
 - sensitivity to grades in first year
 - filter for all four years of grades

################################################################

Renaissance measure
Major prediction
Diversity of major choices/quality within each 'category'

Keep a running paper

################################################################

To-do list
 - Gaussian/other implementations of RBM
 - MF in theano
 - Auto-Encoder
 - movie dataset
 - hyperparameters 

Rename document, add AE, formating
Consistent grading by department

################################################################

Thursday Oct 15, 2015

Gaussian input RBM
 - need to fix reconstruction exploding
 	- consider truncated normal

################################################################

Wednesday Oct 14, 2015

Fixed Gibbs
Added CD-k
Slowing down learning rate ineffective

################################################################

Monday September 28, 2015

issue with scan 
 - need to only pass sequence of variables not functions
 - create cost within scan function

try prediction
consider using sparse matricies for full data size
also note this is not the same training procedure as [Salakhu. 2007]
 - the Gibbs chain involves the entire input space

################################################################

Sunday September 27, 2015

Issue with RBM
 - need to set missing inputs to zero
 - need to separate cost per sample
 	- apply xnm to gradient per sample before taking mean

batch_size = 10
n_hidden = 20
xdim = 66

costs.shape = (10,1)

################################################################

Saturday September 26, 2015

Added RBM
 - tested with MNIST

Modifying RBM
 - add xnm var
 - modify cost updates
 	- error induced by tensor type change in update

################################################################

Friday September 18, 2015

Fixed cvxpy issue
Added helper functions

################################################################

Thursday September 17, 2015

Added preprocessing
 - filtered for students taking at least 10 courses
 - filtered for courses having at least 20 grades

Error creating pivot table due to duplicate entries
 - need to filter for student retaking courses
 - temporarily done by groupby then .last()

Resulting Matrix.shape = (60737, 4007)

Still need to
 - install cvxpy with -llapack or PYTHONPATH issue
 - create a list of missing entries to ignore
 - create a function to calculate frobenius norm with missing entries
